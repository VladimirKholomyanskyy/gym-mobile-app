openapi: 3.0.3
info:
  title: Gym Application API
  version: 1.0.0
  description: A comprehensive API for managing gym users, workouts, and sessions.
tags:
  - name: Exercises
    description: Operations related to exercises
  - name: Training Programs
    description: Operations related to training programs
  - name: Workouts
    description: Operations related to workouts
  - name: Workout Exercises
    description: Operations related to exercises within workouts
  - name: Workout Sessions
    description: Operations related to workout sessions
  - name: Exercise logs
    description: Operations related to logging progress
paths:
  /api/exercises:
    get:
      summary: Retrieve a list of exercises
      tags:
        - Exercises
      operationId: listExercises
      responses:
        "200":
          description: A list of exercises
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Exercise"
        "401":
          description: Unauthorized
  /api/exercises/{exerciseId}:
    get:
      summary: Retrieve an exercise by ID
      tags:
        - Exercises
      operationId: getExerciseById
      parameters:
        - name: exerciseId
          in: path
          description: ID of the exercise to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An exercise object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exercise"
        "404":
          description: Exercise not found
        "401":
          description: Unauthorized
  /api/training-programs:
    post:
      summary: Create a new training program
      tags:
        - Training Programs
      operationId: createTrainingProgram
      requestBody:
        description: Training program details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrainingProgramRequest"
      responses:
        "201":
          description: Training program created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainingProgram"
        "401":
          description: Unauthorized
    get:
      summary: Retrieve all training programs
      tags:
        - Training Programs
      operationId: listTrainingPrograms
      responses:
        "200":
          description: A list of training programs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TrainingProgram"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/training-programs/{programId}:
    get:
      summary: Retrieve a training program by ID
      tags:
        - Training Programs
      operationId: getTrainingProgramById
      parameters:
        - name: programId
          in: path
          description: ID of the training program to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A training program object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainingProgram"
        "404":
          description: Training program not found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    patch:
      summary: Update a training program by ID
      tags:
        - Training Programs
      operationId: updateTrainingProgram
      parameters:
        - name: programId
          in: path
          description: ID of the training program to update
          required: true
          schema:
            type: string
      requestBody:
        description: Updated training program details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrainingProgramRequest"
      responses:
        "200":
          description: Training program updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainingProgram"
        "404":
          description: Training program not found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    delete:
      summary: Delete a training program by ID
      tags:
        - Training Programs
      operationId: deleteTrainingProgram
      parameters:
        - name: programId
          in: path
          description: ID of the training program to delete
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Training program deleted successfully
        "404":
          description: Training program not found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/training-programs/{programId}/workouts:
    post:
      summary: Add a workout to a training program
      tags:
        - Workouts
      operationId: addWorkoutToProgram
      parameters:
        - name: programId
          in: path
          description: ID of the training program
          required: true
          schema:
            type: string
      requestBody:
        description: Details of the workout to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkoutRequest"
      responses:
        "201":
          description: Workout added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutResponse"
        "404":
          description: Training program not found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    get:
      summary: Retrieve workouts for a training program
      tags:
        - Workouts
      operationId: listWorkoutsForProgram
      parameters:
        - name: programId
          in: path
          description: ID of the training program
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of workouts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkoutResponse"
        "404":
          description: Training program not found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/training-programs/{programId}/workouts/{workoutId}:
    patch:
      summary: Update workout
      tags:
        - Workouts
      operationId: updateWorkout
      parameters:
        - name: programId
          in: path
          description: ID of the training program
          required: true
          schema:
            type: string
        - name: workoutId
          in: path
          description: ID of the workout
          required: true
          schema:
            type: string
      requestBody:
        description: Update workout details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkoutRequest"
      responses:
        "200":
          description: Workout updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutResponse"
        "404":
          description: Workout not found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    get:
      summary: Retrieve workout for a training program
      tags:
        - Workouts
      operationId: getWorkoutForProgram
      parameters:
        - name: programId
          in: path
          description: ID of the training program
          required: true
          schema:
            type: string
        - name: workoutId
          in: path
          description: ID of the workout
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A workout object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutResponse"
        "404":
          description: Training program not found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    delete:
      summary: Delete workout by id
      tags:
        - Workouts
      operationId: deleteWorkout
      parameters:
        - name: programId
          in: path
          description: ID of the training program
          required: true
          schema:
            type: string
        - name: workoutId
          in: path
          description: ID of the workout
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Workout deleted successfully
        "404":
          description: Workout not found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/workout-exercises:
    post:
      summary: Add an exercise to a workout
      tags:
        - Workout Exercises
      operationId: postWorkoutExercise
      requestBody:
        description: Add a new exercise to a workout
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkoutExerciseRequest"
        required: true
      responses:
        "201":
          description: Workout exercise created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutExerciseResponse"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    get:
      summary: List all exercises in a workout
      tags:
        - Workout Exercises
      operationId: listWorkoutExercises
      parameters:
        - name: workoutId
          in: query
          description: ID of the workout to fetch exercises for
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of exercises in the workout
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkoutExerciseResponse"
  /api/workout-exercises/{workoutExerciseId}:
    patch:
      summary: Update a workout exercise
      tags:
        - Workout Exercises
      operationId: patchWorkoutExercise
      parameters:
        - name: workoutExerciseId
          in: path
          description: ID of the workout exercise to update
          required: true
          schema:
            type: string
      requestBody:
        description: Updated data for the workout exercise
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkoutExerciseRequest"
        required: true
      responses:
        "200":
          description: Workout exercise updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutExerciseResponse"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    delete:
      summary: Delete a workout exercise
      tags:
        - Workout Exercises
      operationId: deleteWorkoutExercise
      parameters:
        - name: workoutExerciseId
          in: path
          description: ID of the workout exercise to delete
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Workout exercise delete successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/workout-sessions:
    post:
      summary: Start a new workout session
      tags:
        - Workout Sessions
      operationId: addWorkoutSession
      requestBody:
        description: Create a new workout session
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartWorkoutSessionRequest"
        required: true
      responses:
        "201":
          description: Workout session started successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutSessionResponse"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    get:
      summary: List all workout sessions
      tags:
        - Workout Sessions
      operationId: listWorkoutSessions
      responses:
        "200":
          description: List of workout sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkoutSessionResponse"
  /api/workout-sessions/{workoutSessionId}/complete:
    post:
      summary: Mark a workout session as completed
      tags:
        - Workout Sessions
      operationId: completeWorkoutSession
      parameters:
        - name: workoutSessionId
          in: path
          description: ID of the workout session to finish
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Workout session completed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutSessionResponse"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/workout-sessions/{workoutSessionId}:
    get:
      summary: Get a workout session
      tags:
        - Workout Sessions
      operationId: getWorkoutSession
      parameters:
        - name: workoutSessionId
          in: path
          description: ID of the workout session to get
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Workout session to return
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutSessionResponse"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/exercise-logs:
    post:
      summary: Log an exercise during a workout session
      tags:
        - Exercise logs
      operationId: logExercise
      requestBody:
        description: Log details for the exercise
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogExerciseRequest"
        required: true
      responses:
        "201":
          description: Exercise logged successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogExerciseResponse"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    get:
      summary: Retrieve all logged exercises
      tags:
        - Exercise logs
      operationId: listExerciseLogs
      parameters:
        - name: workoutSessionId
          in: query
          description: filter exercise logs by session id
          required: false
          schema:
            type: string
        - name: exerciseId
          in: query
          description: filter exercise logs by exercise id
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of logged exercises
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogExerciseResponse"
  /api/exercise-logs/weight-per-day:
    get:
      summary: Calculate total weight lifted per day for a specific exercise
      tags:
        - Exercise logs
      operationId: getWeightPerDay
      parameters:
        - name: exerciseId
          in: query
          required: true
          description: The ID of the exercise
          schema:
            type: string
        - name: startDate
          in: query
          required: false
          description: Filter logs from this date (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: false
          description: Filter logs up to this date (YYYY-MM-DD)
          schema:
            type: string
            format: date
      responses:
        "200":
          description: A list of total weights per day
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeightPerDayResponse"
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /api/exercise-logs/{exerciseLogId}:
    get:
      summary: Retrieve details of a specific exercise log
      tags:
        - Exercise logs
      operationId: getExerciseLog
      parameters:
        - name: exerciseLogId
          in: path
          description: ID of the specific exercise log
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Details of the exercise log
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogExerciseResponse"

components:
  schemas:
    Exercise:
      type: object
      required:
        - id
        - name
        - primaryMuscle
      properties:
        id:
          type: string
          description: Unique identifier for the exercise.
        name:
          type: string
          description: Name of the exercise.
        primaryMuscle:
          type: string
          description: Primary muscle targeted by the exercise.
        secondaryMuscle:
          type: array
          items:
            type: string
          description: List of secondary muscles targeted.
        equipment:
          type: string
          description: Equipment required for the exercise.
        description:
          type: string
          description: Detailed description of the exercise.

    CreateTrainingProgramRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the training program.
        description:
          type: string
          description: Description of the training program.

    TrainingProgram:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Unique identifier for the training program.
        name:
          type: string
          description: Name of the training program.
        description:
          type: string
          description: Description of the training program.

    WorkoutRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the workout.

    WorkoutResponse:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Unique identifier for the workout.
        name:
          type: string
          description: Name of the workout.

    WorkoutExerciseRequest:
      type: object
      required:
        - workoutId
        - exerciseId
        - sets
        - reps
      properties:
        workoutId:
          type: string
          description: Identifier for the associated workout.
        exerciseId:
          type: string
          description: Identifier for the exercise being added.
        sets:
          type: integer
          format: int32
          description: Number of sets for the exercise.
        reps:
          type: integer
          format: int32
          description: Number of repetitions per set.

    WorkoutExerciseResponse:
      type: object
      required:
        - id
        - workoutId
        - exerciseId
        - sets
        - reps
      properties:
        id:
          type: string
          description: Unique identifier for the workout exercise.
        workoutId:
          type: string
          description: Identifier for the associated workout.
        exerciseId:
          type: string
          description: Identifier for the exercise being added.
        sets:
          type: integer
          format: int32
          description: Number of sets for the exercise.
        reps:
          type: integer
          format: int32
          description: Number of repetitions per set.

    StartWorkoutSessionRequest:
      type: object
      required:
        - workoutId
      properties:
        workoutId:
          type: string
          description: Identifier for the workout to start.

    WorkoutSnapshot:
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - trainingProgramId
      properties:
        id:
          type: string
          description: Unique identifier for the workout snapshot.
        name:
          type: string
          description: Name of the workout.
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the snapshot was created.
        deletedAt:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the snapshot was deleted.
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the snapshot was last updated.
        trainingProgramId:
          type: string
          description: Identifier for the associated training program.
        workoutExercises:
          type: array
          items:
            $ref: "#/components/schemas/WorkoutExercise"
          description: List of exercises included in the workout.

    WorkoutExercise:
      type: object
      required:
        - id
        - reps
        - sets
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the workout exercise.
        reps:
          type: integer
          format: int32
          description: Number of repetitions for the exercise.
        sets:
          type: integer
          format: int32
          description: Number of sets for the exercise.
        exercise:
          $ref: "#/components/schemas/Exercise"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the exercise was created.
        deletedAt:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the exercise was deleted.
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the exercise was last updated.

    WorkoutSessionResponse:
      type: object
      required:
        - id
        - startedAt
        - workoutSnapshot
      properties:
        id:
          type: string
          description: Unique identifier for the workout session.
        startedAt:
          type: string
          format: date-time
          description: Timestamp when the session started.
        completedAt:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the session was completed.
        workoutSnapshot:
          $ref: "#/components/schemas/WorkoutSnapshot"

    LogExerciseRequest:
      type: object
      required:
        - exerciseId
        - workoutSessionId
        - setNumber
        - repsCompleted
        - weightUsed
      properties:
        workoutSessionId:
          type: string
          description: Identifier for workout session
        exerciseId:
          type: string
          description: Identifier for the exercise being logged.
        setNumber:
          type: integer
          format: int32
          description: Number of the set being logged.
        repsCompleted:
          type: integer
          format: int32
          description: Number of repetitions completed in the set.
        weightUsed:
          type: integer
          format: int32
          description: Weight used for the exercise.

    LogExerciseResponse:
      type: object
      required:
        - id
        - exerciseId
        - workoutSessionId
        - setNumber
        - repsCompleted
        - weightUsed
        - loggedAt
      properties:
        id:
          type: string
          description: Unique identifier for the log entry.
        exerciseId:
          type: string
          description: Identifier for the exercise being logged.
        workoutSessionId:
          type: string
          description: Identifier for workout session
        setNumber:
          type: integer
          format: int32
          description: Number of the set being logged.
        repsCompleted:
          type: integer
          format: int32
          description: Number of repetitions completed in the set.
        weightUsed:
          type: integer
          format: int32
          description: Weight used for the exercise.
        loggedAt:
          type: string
          format: date-time
          description: Timestamp when the exercise log was created.
    WeightPerDayResponse:
      type: object
      properties:
        exerciseId:
          type: string
        totalWeightPerDay:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              totalWeight:
                type: number
                format: float
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes

security:
  - bearerAuth: [] # use the same name as above
